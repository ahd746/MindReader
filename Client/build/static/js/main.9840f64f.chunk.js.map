{"version":3,"sources":["context/cardContext.js","components/Card.js","App.js","index.js"],"names":["cardContext","createContext","Card","binaryNumber","useContext","sum","setSum","setToggle","useState","checked","setChecked","selected","setSelected","numbers","i","k","toString","length","push","row1","slice","row2","row3","row4","row5","row6","tableClass","id","className","onClick","map","item","key","App","toggle","msg","Provider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6JAIeA,EADKC,0B,KCAL,SAASC,EAAT,GAMb,IAN8C,IAAjBC,EAAgB,EAAhBA,aAAgB,EACVC,qBAAWJ,GAAtCK,EADqC,EACrCA,IAAKC,EADgC,EAChCA,OAAQC,EADwB,EACxBA,UADwB,EAEfC,oBAAS,GAFM,mBAEtCC,EAFsC,KAE7BC,EAF6B,OAGbF,oBAAS,GAHI,mBAGtCG,EAHsC,KAG5BC,EAH4B,KAKzCC,EAAU,GACLC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAIC,EAAID,EAAEE,SAAS,GACgB,MAA/BD,EAAEA,EAAEE,OAASd,IACfU,EAAQK,KAAKJ,GAGjB,IAAIK,EAAON,EAAQO,MAAM,EAAG,GACxBC,EAAOR,EAAQO,MAAM,EAAG,IACxBE,EAAOT,EAAQO,MAAM,GAAI,IACzBG,EAAOV,EAAQO,MAAM,GAAI,IACzBI,EAAOX,EAAQO,MAAM,GAAI,IACzBK,EAAOZ,EAAQO,MAAM,GAAI,IAEzBM,EAAa,GAGjB,OAFWA,EAAXf,EAAwB,kCAAiD,gDAGvE,2BACEgB,GAAG,QACHC,UAAWF,EACXG,QAAS,WACPtB,GAAU,GACVG,GAAYD,GACZG,GAAaD,GACHL,EAAVG,EAAiBJ,EAAMc,EAAK,GAAad,EAAMc,EAAK,MAEtD,+BACE,4BAAKA,EAAKW,KAAI,SAAAC,GAAI,OAAI,wBAAIC,IAAKD,GAAT,IAAiBA,EAAjB,SACtB,4BAAKV,EAAKS,KAAI,SAAAC,GAAI,OAAI,wBAAIC,IAAKD,GAAT,IAAiBA,EAAjB,SACtB,4BAAKT,EAAKQ,KAAI,SAAAC,GAAI,OAAI,wBAAIC,IAAKD,GAAT,IAAiBA,EAAjB,SACtB,4BAAKR,EAAKO,KAAI,SAAAC,GAAI,OAAI,wBAAIC,IAAKD,GAAT,IAAiBA,EAAjB,SACtB,4BAAKP,EAAKM,KAAI,SAAAC,GAAI,OAAI,wBAAIC,IAAKD,GAAT,IAAiBA,EAAjB,SACtB,4BAAKN,EAAKK,KAAI,SAAAC,GAAI,OAAI,wBAAIC,IAAKD,GAAT,IAAiBA,EAAjB,WCkBfE,MAtDf,WAAgB,IAAD,EACSzB,mBAAS,GADlB,mBACNH,EADM,KACDC,EADC,OAEeE,oBAAS,GAFxB,mBAEN0B,EAFM,KAEE3B,EAFF,KAGT4B,EAAM,eAOV,OALEA,EADE9B,EAAM,IAAMA,EAAM,EACd,+BAEH,sBAAkBA,GAIrB,kBAAC,EAAY+B,SAAb,CAAsBC,MAAO,CAAEhC,MAAKC,SAAQ4B,SAAQ3B,cAClD,yBAAKqB,UAAU,aACb,gDACA,qGACA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,UACb,kBAAC1B,EAAD,CAAMC,aAAc,KAEtB,yBAAKyB,UAAU,UACb,kBAAC1B,EAAD,CAAMC,aAAc,KAEtB,yBAAKyB,UAAU,UACb,kBAAC1B,EAAD,CAAMC,aAAc,MAGxB,yBAAKyB,UAAU,YACb,yBAAKA,UAAU,UACb,kBAAC1B,EAAD,CAAMC,aAAc,KAEtB,yBAAKyB,UAAU,UACb,kBAAC1B,EAAD,CAAMC,aAAc,KAEtB,yBAAKyB,UAAU,UACb,kBAAC1B,EAAD,CAAMC,aAAc,MAGxB,yBAAKyB,UAAU,QACb,4BACEA,UAAU,gBACVC,QAAS,WACPtB,GAAW2B,KAHf,gBAOA,uBAAGN,UAAWM,EAAS,iCAAmC,gCACvDC,OC/CbG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.9840f64f.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\n\r\nconst cardContext = createContext();\r\nexport default cardContext","import React, { useState, useContext } from 'react'\r\nimport cardContext from '../context/cardContext'\r\n\r\nexport default function Card({ binaryNumber }) {\r\n  const { sum, setSum, setToggle } = useContext(cardContext)\r\n  const [checked, setChecked] = useState(true);\r\n  const [selected, setSelected] = useState(true);\r\n\r\n  let numbers = [];\r\n  for (let i = 1; i < 64; i++) {\r\n    let k = i.toString(2);\r\n    if (k[k.length - binaryNumber] === '1') {\r\n      numbers.push(i);\r\n    }\r\n  }\r\n  let row1 = numbers.slice(0, 5);\r\n  let row2 = numbers.slice(5, 10);\r\n  let row3 = numbers.slice(10, 15);\r\n  let row4 = numbers.slice(15, 20);\r\n  let row5 = numbers.slice(20, 25);\r\n  let row6 = numbers.slice(25, 30);\r\n\r\n  var tableClass = '';\r\n  selected ? tableClass = \"table table-bordered table-dark\" : tableClass = \"table table-bordered table-dark selectedTable\";\r\n\r\n  return (\r\n    <table\r\n      id=\"table\"\r\n      className={tableClass}\r\n      onClick={() => {\r\n        setToggle(false)\r\n        setChecked(!checked)\r\n        setSelected(!selected)\r\n        checked ? setSum(sum + row1[0]) : setSum(sum - row1[0])\r\n      }} >\r\n      <tbody>\r\n        <tr>{row1.map(item => <th key={item}> {item} </th>)}</tr>\r\n        <tr>{row2.map(item => <th key={item}> {item} </th>)}</tr>\r\n        <tr>{row3.map(item => <th key={item}> {item} </th>)}</tr>\r\n        <tr>{row4.map(item => <th key={item}> {item} </th>)}</tr>\r\n        <tr>{row5.map(item => <th key={item}> {item} </th>)}</tr>\r\n        <tr>{row6.map(item => <th key={item}> {item} </th>)}</tr>\r\n      </tbody>\r\n    </table >\r\n  )\r\n}","import React, { useState } from 'react';\nimport cardContext from './context/cardContext'\nimport './App.css'\nimport Card from './components/Card';\n\nfunction App() {\n  const [sum, setSum] = useState(0);\n  const [toggle, setToggle] = useState(false);\n  let msg = \"Read My Mind\";\n  if (sum > 60 || sum < 1) {\n    msg = \"choose a number from 1 to 60\"\n  } else {\n    msg = `You choosed ${sum}`;\n  }\n\n  return (\n    <cardContext.Provider value={{ sum, setSum, toggle, setToggle }} >\n      <div className=\"container\">\n        <h1>Mind Reader Game</h1  >\n        <h3>Choose a number from 1 and 60 and press on the tables that contain it</h3>\n        <div className=\"row mt-4\">\n          <div className=\"col-lg\" >\n            <Card binaryNumber={1} />\n          </div>\n          <div className=\"col-lg\" >\n            <Card binaryNumber={4} />\n          </div>\n          <div className=\"col-lg\" >\n            <Card binaryNumber={3} />\n          </div>\n        </div>\n        <div className=\"row mt-4\">\n          <div className=\"col-lg\" >\n            <Card binaryNumber={2} />\n          </div>\n          <div className=\"col-lg\" >\n            <Card binaryNumber={6} />\n          </div>\n          <div className=\"col-lg\" >\n            <Card binaryNumber={5} />\n          </div>\n        </div>\n        <div className=\"mt-4\" >\n          <button\n            className=\"d-inline mb-5\"\n            onClick={() => {\n              setToggle(!toggle)\n            }}>\n            Read My Mind\n          </button>\n          <p className={toggle ? 'd-inline font-weight-bold ml-3' : 'd-none font-weight-bold ml-3'}>\n            {msg}\n          </p>\n        </div>\n      </div>\n    </cardContext.Provider >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}